Found a 59 line (208 tokens) duplication in the following files: 
Starting at line 47 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Ghost.java
Starting at line 49 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java

	}

	/* Chooses a new direction randomly for the ghost to move */
	public char newDirection() {
		int random;
		char backwards = 'U';
		int lookX = x, lookY = y;
		Set<Character> set = new HashSet<Character>();
		switch (direction) {
		case 'L':
			backwards = 'R';
			break;
		case 'R':
			backwards = 'L';
			break;
		case 'U':
			backwards = 'D';
			break;
		case 'D':
			backwards = 'U';
			break;
		}

		char newDirection = backwards;
		/* While we still haven't found a valid direction */
		while (newDirection == backwards || !isValidDest(lookX, lookY)) {
			/* If we've tried every location, turn around and break the loop */
			if (set.size() == 3) {
				newDirection = backwards;
				break;
			}

			lookX = x;
			lookY = y;

			/* Randomly choose a direction */
			random = (int) (Math.random() * 4) + 1;
			if (random == 1) {
				newDirection = 'L';
				lookX -= increment;
			} else if (random == 2) {
				newDirection = 'R';
				lookX += gridSize;
			} else if (random == 3) {
				newDirection = 'U';
				lookY -= increment;
			} else if (random == 4) {
				newDirection = 'D';
				lookY += gridSize;
			}
			if (newDirection != backwards) {
				set.add(new Character(newDirection));
			}
		}
		return newDirection;
	}

	/* Random move function for ghost */
	public void move() {
=====================================================================
Found a 19 line (76 tokens) duplication in the following files: 
Starting at line 115 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Ghost.java
Starting at line 155 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java

		switch (direction) {
		case 'L':
			if (isValidDest(x - increment, y))
				x -= increment;
			break;
		case 'R':
			if (isValidDest(x + gridSize, y))
				x += increment;
			break;
		case 'U':
			if (isValidDest(x, y - increment))
				y -= increment;
			break;
		case 'D':
			if (isValidDest(x, y + gridSize))
				y += increment;
			break;
		}
	}
=====================================================================
Found a 14 line (65 tokens) duplication in the following files: 
Starting at line 125 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java
Starting at line 190 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java

			} else if (y == 9 * gridSize && x > max - gridSize * 2) {
				x = 1 * gridSize;
				teleport = true;
			}
			break;
		case 'U':
			if (isValidDest(x, y - increment))
				y -= increment;
			break;
		case 'D':
			if (isValidDest(x, y + gridSize))
				y += increment;
			break;
		}
=====================================================================
Found a 7 line (42 tokens) duplication in the following files: 
Starting at line 117 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java
Starting at line 182 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java

			} else if (y == 9 * gridSize && x < 2 * gridSize) {
				x = max - gridSize * 1;
				teleport = true;
			}
			break;
		case 'R':
			if (isValidDest(x + gridSize, y)) {
=====================================================================
Found a 13 line (41 tokens) duplication in the following files: 
Starting at line 105 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Ghost.java
Starting at line 107 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java

	public void move() {
		lastX = x;
		lastY = y;

		/* If we can make a decision, pick a new direction randomly */
		if (isChoiceDest()) {
			direction = newDirection();
		}

		/* If that direction is valid, move that way */
		switch (direction) {
		case 'L':
			if (isValidDest(x - increment, y))
=====================================================================
Found a 11 line (39 tokens) duplication in the following files: 
Starting at line 123 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Ghost.java
Starting at line 163 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java
Starting at line 194 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java

			break;
		case 'U':
			if (isValidDest(x, y - increment))
				y -= increment;
			break;
		case 'D':
			if (isValidDest(x, y + gridSize))
				y += increment;
			break;
		}
	}
=====================================================================
Found a 10 line (38 tokens) duplication in the following files: 
Starting at line 123 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Ghost.java
Starting at line 129 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java
Starting at line 163 of /home/michelle/Nextcloud/Uni/FortgeschritteneSoftwaretechnik/workspace/javapacman/src/Player.java

			break;
		case 'U':
			if (isValidDest(x, y - increment))
				y -= increment;
			break;
		case 'D':
			if (isValidDest(x, y + gridSize))
				y += increment;
			break;
		}
